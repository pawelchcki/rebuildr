name: Dependencies

on:
  schedule:
    # Run weekly on Mondays at 2 AM UTC
    - cron: '0 2 * * 1'
  workflow_dispatch:

jobs:
  # Update Nix flake inputs
  update-flake-inputs:
    name: Update Flake Inputs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v9

      - name: Install Flake Dependencies
        uses: DeterminateSystems/flake-checker-action@v1
        with:
          flake-inputs: |
            nixpkgs
            treefmt-nix
            pre-commit-hooks

      - name: Update flake inputs
        run: |
          nix flake update
          
          # Check if there are any changes
          if git diff --quiet flake.lock; then
            echo "No updates available"
            exit 0
          fi

      - name: Test updated inputs
        run: |
          nix run .#checks.x86_64-linux.pre-commit-check
          nix run .#checks.x86_64-linux.default

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update flake inputs"
          title: "chore: update flake inputs"
          body: |
            This PR updates the Nix flake inputs to their latest versions.
            
            **Changes:**
            - Updated flake inputs
            - All checks pass with updated dependencies
            
            **Testing:**
            - ✅ Formatting checks pass
            - ✅ Pre-commit hooks pass  
            - ✅ Tests pass
          branch: update-flake-inputs
          delete-branch: true

  # Security audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v9

      - name: Install Flake Dependencies
        uses: DeterminateSystems/flake-checker-action@v1
        with:
          flake-inputs: |
            nixpkgs

      - name: Run security audit
        run: |
          echo "Running security audit..."
          
          # Check for known vulnerabilities in Python dependencies
          nix develop --command bash -c "
            if command -v uv &> /dev/null; then
              echo 'Checking Python dependencies with uv...'
              uv tree --check
            fi
          "
          
          # Build and test to ensure nothing is broken
          nix build .#packages.x86_64-linux.default
          nix run .#checks.x86_64-linux.default
          
          echo "Security audit completed successfully"

  # Dependency freshness check
  dependency-freshness:
    name: Dependency Freshness
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v9

      - name: Install Flake Dependencies
        uses: DeterminateSystems/flake-checker-action@v1
        with:
          flake-inputs: |
            nixpkgs

      - name: Check dependency freshness
        run: |
          echo "Checking dependency freshness..."
          
          # Show current flake input versions
          nix flake metadata --json | jq -r '.locks.nodes | to_entries[] | select(.value.type == "github") | "\(.key): \(.value.locked.rev[0:7]) (\(.value.locked.lastModified))"'
          
          # Check if we're using latest nixpkgs
          echo "Current nixpkgs channel: $(nix flake metadata --json | jq -r '.locks.nodes.nixpkgs.locked.rev[0:7]')"
          
          echo "Dependency freshness check completed"